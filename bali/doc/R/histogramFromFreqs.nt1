4/2015 I initially calculated freqs over years of mean relig-type and
avgharvestha in NetLogo, producing binned frequencies for each run.
This isn't what I want to do in the long run--better to just store the
5000 averages for each run (and write it to separate files, rather than
using Behavior Space's output files).  

However, given that I have the data in this form, I want to make
histograms with it.  Well, you can't use the lattice histogram function
for this purpose, since it wants to calculate the frequencies.

But you can kludge it using lattice's barchart function.

First create a dataframe with three columns:
bin id, freq data, run id.

Doing it by hand using two of the runs, you could do it this way:

bins <- c("00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49")
run1 <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00159968,0.0079984,0.046390722,0.126374725,0.155968806,0.172765447,0.169566087,0.088382324,0.055388922,0.023395321,0.017596481,0.055188962,0.066186763,0.01119776,0.0019996,0,0,0,0,0,0,0,0,0,0,0,0)
run2 <- c(0,0.00279944,0.027794441,0.016596681,0.0119976,0.019596081,0.017996401,0.024995001,0.029194161,0.035392921,0.022195561,0.020995801,0.024795041,0.021195761,0.018996201,0.018396321,0.013397321,0.00559888,0.00179964,0.00119976,0.00459908,0.0039992,0.0059988,0.00659868,0.013197361,0.043191362,0.135372925,0.195560888,0.167966407,0.077184563,0.01139772,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)

religtype.df <- rbind(data.frame(bin=bins, freq=run1, run=rep("1",50)),
                      data.frame(bin=bins, freq=run2, run=rep("2",50)))

Then you can create a histogram/barchart like this:

barchart(freq ~ bin | run, data=religtype.df, scales = list(x = list(rot = 90)))

Note:
	It's easier if the conditioning variables are strings.
	barchart does funny things otherwise.

	barchart will try to sort the columns alphabetically.
	That's why why I prepended 0's to the single-digit bin ids.
	Oh--maybe I should do that for run id's, too.  Or maybe use
	the random seeds for this?

